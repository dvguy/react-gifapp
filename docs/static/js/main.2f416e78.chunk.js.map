{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","Hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","required","getGifs","category","a","url2","encodeURI","fetch","res","json","data","info","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagenes","key","GiftExpertApp","categories","idx","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAU,IAFF,mBAErCC,EAFqC,KAEzBC,EAFyB,KAa5C,OACI,0BAAMC,SANW,SAACC,GAClBA,EAAEC,iBACFN,GAAe,SAAAO,GAAI,OAAML,GAAN,mBAAoBK,SAKnC,2BAAOC,KAAK,OACZC,MAAOP,EACPQ,SAbkB,SAACL,GACtBF,EAAcE,EAAEM,OAAOF,QAapBG,UAAQ,M,uBCrBPC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,iDAGoCC,UAAUH,GAH9C,+DAIDI,MAAMF,GAJL,cAIbG,EAJa,gBAKEA,EAAIC,OALN,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,QAXtB,kBAeZL,GAfY,4CAAH,sDCEPQ,EAAc,SAAC,GAAqB,EAApBL,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,yBAAKI,UAAU,4DACX,yBAAKC,IAAKL,EAAKM,IAAKP,IACpB,2BAAIA,KCDHQ,EAAW,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAc,IAAD,EACZb,mBAAS,CAC/BoB,KAAM,GACNc,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNzB,EAAQC,GACPyB,MAAM,SAAAC,GACHH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGlB,CAACrB,IACGsB,EDTiBK,CAAa3B,GAA9BO,EAJ6B,EAI7BA,KAAMc,EAJuB,EAIvBA,QAEb,OACI,oCACA,4BAAKrB,GACJqB,EAAU,cAAgB,eAE3B,yBAAKJ,UAAU,aAEHV,EAAKE,KAAI,SAAAmB,GAAQ,OACb,kBAAC,EAAD,eACAC,IAAOD,EAASjB,IACZiB,UEhBfE,EAAgB,WAAM,IAAD,EAEM3C,mBAAS,IAFf,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAQ9B,OACI,oCACA,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ6C,EAAWtB,KAAI,SAACT,EAAUgC,GAAX,OACf,kBAAC,EAAD,CACCH,IAAO7B,EACPA,SAAYA,U,MCnB7BiC,IAASC,OAET,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.2f416e78.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState( \"\" );\r\n\r\n    const handleEventChange = (e) =>{\r\n         setinputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCategories( cats => [ inputValue,...cats]);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" \r\n            value={inputValue}\r\n            onChange={handleEventChange}\r\n            required\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n    // const key = 'InXZnf6rzcenFpziSCjLywGCbwmsMcxj';\r\n    // const url = 'api.giphy.com/v1/gifs/search';\r\n    const url2 = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=InXZnf6rzcenFpziSCjLywGCbwmsMcxj`;\r\n    const res = await fetch(url2);\r\n    const {data} = await res.json()\r\n\r\n    const info = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url, \r\n        }\r\n    })\r\n\r\n    return info;\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__bounce animate__delay-1s'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GiftGrid = ({category}) => {\r\n\r\n    //  const [image, setimage] = useState([]);\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading ? 'Cargando...' : 'Fin de carga'}\r\n\r\n        <div className='card-grid'>\r\n                {\r\n                    data.map(imagenes => (\r\n                        <GifGridItem \r\n                        key = {imagenes.id}\r\n                        {...imagenes}/>\r\n                    )) \r\n                }\r\n        </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() =>{\r\n        getGifs(category)\r\n        .then( imgs =>{\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n    }, [category]);\r\n    return state; //state regresa como en todo hook useState, el estado inicial en este caso\r\n    // regresa data [] y loading true.\r\n}\r\n","import React from 'react';\r\nimport {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\nexport const GiftExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState([])\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( [...categories, 'HxH'] )\r\n    // }\r\n\r\n    return(\r\n        <>\r\n        <h2>GiftExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n\r\n        <ol>\r\n            { //Map recibe 2 args, uno es el elemento del arreglo y el segundo el indice\r\n                categories.map((category, idx) =>\r\n                <GiftGrid\r\n                 key = {category}\r\n                 category = {category}/>\r\n                )\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n<GiftExpertApp />,\n\ndocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}